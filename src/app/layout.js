"use client";
import { useEffect } from "react";
import localFont from "next/font/local";
import "./globals.css";
import "leaflet/dist/leaflet.css";
import Header from "./components/header";
import SideBarMenu from "./components/SideBarMenu";
import { AppSidebar } from "./components/AppSideBar";
import Footer from "./components/footer";
import { AuthProvider } from "@/context/AuthContext";
import { usePathname } from "next/navigation";
import ProtectedRoute from "./components/ProtectedRoute";
import { SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar";
import api from "@/utils/apiCall";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata = {
//   title: "O.P.A SUD",
//   description: "Generated by Selkyn",
// };

// const useRefreshOnFocus = () => {
//   useEffect(() => {
//     const handleFocus = async () => {
//       console.log(
//         "🔄 L'utilisateur est revenu sur le site, tentative de refresh..."
//       );
//       try {
//         await api.post("/auth/refreshTokenWeb");
//         console.log("✅ Token rafraîchi avec succès !");
//       } catch (error) {
//         console.error("❌ Erreur lors du rafraîchissement :", error);
//       }
//     };

//     window.addEventListener("focus", handleFocus);

//     return () => window.removeEventListener("focus", handleFocus);
//   }, []);
// };

export default function RootLayout({ children }) {
  const pathname = usePathname(); // Récupère le chemin actuel
  // useRefreshOnFocus();
  // Liste des chemins où le header ne doit pas apparaître
  const noHeaderRoutes = ["/auth"];
  return (
    <html lang="en">
      <body className="antialiased flex h-screen">
        <AuthProvider>
          <SidebarProvider
            style={{
              "--sidebar-width": "12rem",
              "--sidebar-width-mobile": "20rem",
            }}
          >
            {/* ✅ Sidebar fixe à gauche */}
            {!noHeaderRoutes.includes(pathname) && <AppSidebar />}

            {/* ✅ Conteneur principal avec Header en haut et Main en-dessous */}
            <div className="flex flex-col flex-1 ml-46 min-h-screen">
              {!noHeaderRoutes.includes(pathname) && <Header />}{" "}
              {/* ✅ Header */}
              <ProtectedRoute>
                <main className="flex-1 p-6 bg-gray-100 overflow-auto">
                  {children}
                </main>
              </ProtectedRoute>
            </div>
          </SidebarProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
